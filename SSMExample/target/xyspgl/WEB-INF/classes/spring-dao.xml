<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    
    <!-- 2.C3P0数据库连接池 -->
    <bean id="dateSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <!-- 引入属性文件的值 -->
        <property name="driverClass" value="${jdbc.driverClassName}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="1000"/>
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2"></property>
    </bean>
    
     <!-- 3.配置SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置mybatis核心配置文件 -->
        <property name="configLocation" value="classpath:mybaits-config.xml" />
        <!-- 配置数据源 -->
        <property name="dataSource" ref="dateSource" />
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <!-- 此处更改  将自己的mapper文件目录配置 -->
        <property name="mapperLocations" value="classpath:com/springMvcDemo2/model/dao/mapper/*.xml"/>
    </bean>
    
    <!-- 4.配置扫描Dao接口，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!-- 注入sqlSessionFactory -->
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    
    <!-- 给出需要扫描Dao接口包 -->
    <!-- 此处改为自己的dao层包    -->
    <property name="basePackage" value="com.springMvcDemo2.model.dao.inter"></property>
    
    </bean>
       
 <!--     <context:component-scan base-package="com.xk.XXXX.service"/> -->
    
    <!-- 配置事务管理器=============================== -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dateSource"/>
    </bean>
    
    <!-- 开启注解事务=============== -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
</beans>